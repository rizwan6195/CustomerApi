<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="cosmodata-test-suite.xml" />
	<munit:test name="cosmodata-test-suite-PostToCosmoTest" doc:id="bc723eeb-f54f-4f2e-baa8-4ff952fc858d" description="Test">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="08755a6a-c0b2-4556-a024-c7572db14bb5" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb510f99-2e8c-43ce-9377-c3523dd5b9aa" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[
output application/json ---
{
              "firstName": "talha",
              "lastName": "liaquat",
              "companyName": "capgemini",
              "email": "talha@cap.com",
              "phone": "+493211212543"
 }
]' mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to PostToCosmo" doc:id="30cb684c-da17-4325-a290-8fe289bfd50e" name="post:\customer" target="expected"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="b739d691-e862-4930-a2e2-a0f7bf6d30b0" actual="#[payload]" expected='#[vars.expected]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="cosmodata-test-suite-getCustomerTest" doc:id="55ff9ac2-3fa2-42fc-aa93-2879eeb16fe1" description="Test">
		<munit:behavior>
			<munit:set-event doc:name="Set Event" doc:id="d88bcdd8-e0e7-4351-8124-b4ae16340fd8" >
				<munit:attributes value='#[{
headers:{
				customerId:"60abda82-8859-4e54-bf39-b016dcbc34a6"
				}
}]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="8e6b5466-d948-4fce-85ce-1469e702cbf4" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="28ff4a54-dc15-46d5-98af-0a010ce28412" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[
output application/json ---
{
    "customerId": "60abda82-8859-4e54-bf39-b016dcbc34a6",
    "personalInformation": {
        "firstName": "talha",
        "lastName": "liaquat",
        "companyName": "capgemini",
        "email": "talha@cap.com",
        "phone": "+9715576654321"
    },
    "address": [
        {
            "street": "Steinbrueckstrasse",
            "houseNumber": "114",
            "city": "Nuremberg",
            "country": "Germany"
        }
    ]
}
]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomer" doc:id="90b008e8-7b2d-49b9-a2ae-710bd392a9c8" name="getCustomer"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="fb77f6e7-b5ec-45c3-875e-9e62c1b94a9d" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="customer-test-suite-put:\customerTest" doc:id="9ebc91a1-722a-4497-8b6f-10a11440aa3c" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="3580ea1f-7831-4ca9-b577-8cb1caf7e75a" >
				<munit:attributes value='#[{
headers:{
				customerId:"60abda82-8859-4e54-bf39-b016dcbc34a6"
				}
}]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="41672587-6781-4a28-98d9-a9e44e947d18" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="77a178d0-6f41-46f8-a0ef-6a9f38c0d8b7" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[
output application/java ---
{
    "CID": "60abda82-8859-4e54-bf39-b016dcbc34a6",
    "FirstName": "talha",
    "LastName": "liaquat",
    "Company": "capgemini",
     "Email": "talha@cap.com",
     "Phone": "+9715576654321",
     "Street": "Steinbrueckstrasse",
     "HouseNum": "114",
     "City": "Nuremberg",
     "Country": "Germany"
}
]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put:\customer" doc:id="280a45d3-1989-4d1d-99a3-9e8793a26353" name="put:\customer"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="1591806f-b88a-4436-b1df-46d067d43b67" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>



</mule>
